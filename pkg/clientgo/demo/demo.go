package main

//
//import (
//	"crypto/tls"
//	"crypto/x509"
//	"encoding/base64"
//	"encoding/json"
//	"fmt"
//	"github.com/erda-project/erda/apistructs"
//	"github.com/erda-project/erda/modules/scheduler/conf"
//	"github.com/erda-project/erda/pkg/clusterdialer"
//	"github.com/erda-project/erda/pkg/customhttp"
//	"github.com/gorilla/websocket"
//	"github.com/sirupsen/logrus"
//	"io"
//	"net/http"
//	"net/url"
//	"sync"
//	"time"
//)
//
//func main() {
//	_ = apistructs.ClusterInfo{
//		OrgID:          2,
//		Name:           "fake-cluster",
//		DisplayName:    "fake-cluster",
//		Type:           "k8s",
//		CloudVendor:    "alicloud-ecs",
//		WildcardDomain: "fake-cluster.terminus.io",
//	}
//
//	m := apistructs.ManageConfig{
//		Address:  "https://10.0.6.198:6443",
//		CaData:   "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lVQjJiek5Sckp3ekE4NzRmcEc3N3o5UTlORkpVd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0dERVdNQlFHQTFVRUF4TU5hM1ZpWlhKdVpYUmxjeTFqWVRBZUZ3MHlNVEEwTWpNd01EVTJNREJhRncwMApPREE1TURnd01EVTJNREJhTUJneEZqQVVCZ05WQkFNVERXdDFZbVZ5Ym1WMFpYTXRZMkV3Z2dFaU1BMEdDU3FHClNJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNYV3BEc2R4MVhLWitEK0Zjb1dibCttYnBWd1FPWng4NmwKWGtjZERhM05icDJkT3pqNHNCUU9HanYzcGk1RXZzOEszVEV3emlmQ1dRQzZOS2NNUGZiQTFvTlptUUZ6Y0ZwSwpjWTNnMDhVbUxPbHhwZWtRTkJWdmk0WXI1S1A2a2xxQ1p5SkZkeXVGOW5JckhMN1E1RVIvRTNwcmMwbGhmMHBXCm5XS1Y3NVplek53NDhYVzhQZ0tUUjMyN2pQeEx5eG1yQ01PSGZwN2k5b3hEL1NkbHdaTkJ6alJWOG4zUXN2L1oKMzNuSGhQZFI3MUV3a1FtTjB4Yi9mT244SnFoanVCdXRxejRHN1Bxc055N2M1bmhlVVY0Mnc0Tk9SMHpDY1ZKZQo0N3FNRzQ5RW1WTG05MmVTYXhocmVsWHlsNXBrMVpzTG8zN2o5T05RTVpJTmo0MmFJLzBYQWdNQkFBR2paakJrCk1BNEdBMVVkRHdFQi93UUVBd0lCQmpBU0JnTlZIUk1CQWY4RUNEQUdBUUgvQWdFQ01CMEdBMVVkRGdRV0JCUW4KZ3N6OUhTMWp2NkVtcTlFSHB6VHZLekgvTkRBZkJnTlZIU01FR0RBV2dCUW5nc3o5SFMxanY2RW1xOUVIcHpUdgpLekgvTkRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVVvK1BuQVpYdVZWaElhRmphTENZSnBzUis4MDY2WHlqCkpsQ2lFSnc4YVRiQjI3ZVVXZTUrYU4yL2NrZFpWc3R5WHVnZ2RVRkdkeTJiOXhsbitwdjgwZSsxbkpHRDRGZTkKQUZQNUt6L09BbWMyZlQ5Y0Z4TmNXRjRPYUZRWmZ5ampUb0JLWjA3VXpMNXJsbVRJZUtsNCtnUnhYbXJYWmY3bgpMZGV4bjVwL2pKU29tTXV5OXU0QjVkSkZGOVdKSW4vcmZiYmtwN0pJclRMam9seFNoS1p4cFBXUk5ZWCsvRk1hCjZBTitwZkJsTTFLbUpkUEd2d3NhYzBHUExndUxJaXBpNTVoMXhZRDhPN25nZzNzSFBaVnk2b1FDS3BsZjB3M2oKT0crYVh4QU5PVDhweG5SMDBJWldZYThKdW85NC9peWFKTGs2d2JMeFZIb25WWU93UVNZNlVBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
//		CertData: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUekNDQWplZ0F3SUJBZ0lVTnQ5ZlVKRnBiRk85OW9mTlI3K1Y1Z25MeHJjd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0dERVdNQlFHQTFVRUF4TU5hM1ZpWlhKdVpYUmxjeTFqWVRBZUZ3MHlNVEEwTWpNd01EVTJNREJhRncwMApPREE1TURnd01EVTJNREJhTURReEZ6QVZCZ05WQkFvVERuTjVjM1JsYlRwdFlYTjBaWEp6TVJrd0Z3WURWUVFECkV4QnJkV0psY201bGRHVnpMV0ZrYldsdU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQTI2V01wRk5iZzZCUmJFbDlYd1dzZVd1V28rbEFaVTFad1BrZUw3bE1ZUzFrd0dLQmUxKys0Z21mV0E4dAoyd0UxcFp0cDB2SGhhWlFWWG5wTDhJK2NUQVZIR2kxOUpKaDRwSHo4dWFUSHBpUjcyNlRXdTc4N1FOM3pMY2JnCmwzSXRDU3Z2TmJZUjc4cXJuMjRIdUd3TjhKOE5NY0tSR0Z3dWo3WXpGMXFaSkMrRTJIS2c0NUMzZVJEZHVPamQKamhEakhvbE5PYU5HRXh1SU5JSVlIK0JqSE1YVFlOZHMxdWdhL0hOVW1NQ053R3JiZFA3RjY2ZWh1aDZJdXN3TAp6L01IaU9NK0IrS29hY2ZCWW9nbUdhVTk0VC9qaHZXRHR2ZGh6Ujg0NHU1YVV1b1dNYWFSSW1zWXcrWHdhRW5kCjV3Ukk3WEJHK0hUaHJDZzBWMEFKQnBkZC9RSURBUUFCbzNVd2N6QU9CZ05WSFE4QkFmOEVCQU1DQmFBd0V3WUQKVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWRCZ05WSFE0RUZnUVVXWkFYOHgxNApFNzJMNGdudWJmSjlVeGFPbnBzd0h3WURWUjBqQkJnd0ZvQVVKNExNL1IwdFk3K2hKcXZSQjZjMDd5c3gvelF3CkRRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFEMHg5enZCTGJIcjJjZEtmZE9JakxRcThDWmNveUp1aDBpL2pob2wKUCtKOHdWOVNBdUU4VDBNdXN3SjRWdTErWjNtNVFjLzVjbnpueVV3SCtFbWw4ZnQ0SnZoTTV5a3NWalhMQ1ZHMwpwRlpvUVRrQllDS0VyeldHUk5VNGVGakwwL0FlS214WHRJU2pUNnJsdm9SS0s1bXo5WHREb1cyN0JEb3Z1UTJSCjMrRlBkK1d1V3hiUzRZSXJuNFlRc2s3dGl1NnlROWdKTHAyN3Q1K2pHc1NtUlNzNHNyaWFRM1NJOUVGc202cEcKQ3ZkUmVUdnplMVp4RzlRMTJSUy9VVkFoenhZLzZOT1RTd25xdkthV2JYcUk3R29nVFc5S2pLdDMwajVXTHppZgoyNXZXd1FHbHAwRC85R01IeVAvUGhxRzMvbVl4dThJNVhMY2lJcnpaNTZjQkh4Yz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
//		KeyData:  "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBMjZXTXBGTmJnNkJSYkVsOVh3V3NlV3VXbytsQVpVMVp3UGtlTDdsTVlTMWt3R0tCCmUxKys0Z21mV0E4dDJ3RTFwWnRwMHZIaGFaUVZYbnBMOEkrY1RBVkhHaTE5SkpoNHBIejh1YVRIcGlSNzI2VFcKdTc4N1FOM3pMY2JnbDNJdENTdnZOYllSNzhxcm4yNEh1R3dOOEo4Tk1jS1JHRnd1ajdZekYxcVpKQytFMkhLZwo0NUMzZVJEZHVPamRqaERqSG9sTk9hTkdFeHVJTklJWUgrQmpITVhUWU5kczF1Z2EvSE5VbU1DTndHcmJkUDdGCjY2ZWh1aDZJdXN3THovTUhpT00rQitLb2FjZkJZb2dtR2FVOTRUL2podldEdHZkaHpSODQ0dTVhVXVvV01hYVIKSW1zWXcrWHdhRW5kNXdSSTdYQkcrSFRockNnMFYwQUpCcGRkL1FJREFRQUJBb0lCQUJYTzR4N3hzOVZtMW83RQo0VERORkduZDE5QWdlYWRWUGNNZU9QUU9GdHBUTW55eml4MmZ6UWtPWVliUnd3REtwdlB4Y1ZsamNMa1YzZVZLCmlUMnlWSmRyc3JxVHA2ZzVoMGoxcS9ZV3VVZnl1V1YrZ1YrVXhpSlRwekIxWFpsTDJkTGVUTnJ0WCt5S0YrNDEKYzRqSkdiMDVYWXNDUVh2RXMwN0xqVmtWUXIxSDExNDhOMWVJYXJyWjVGbkg4dVBHdDZLNWhJOXlsVHlYekZWMgpDZDc4WUw4U3NYTENCS2JYdzNpOGVSZForSEZWUnprSHVCa1JvcC9LTHNEOUxnUDdSZC9XOE8xZGxtQjVPcCtBCnlZbm5DYXVtQzFLL3ZtTXFTWEMreWc1UXoycFFTYzlwUjNRWGhma3dyWmhhNXRDVTltWlJQbDQ5anNldVpsWTgKekdlSGE5VUNnWUVBL09SSFk3T0ZuUG93Q3ZRcVlLZU8yVVgzOUpEeTFIR3pvSytnelczSWFnVHc5NlZmaFlzSgprT0x6QStvYkRJNW1tL1pYZnJMektaSWhpZG9ac3RtSU4vdTNuRGZuYWx0MThtcVprVHhnb2d2SGdiSDh0R2c5CnkyOGw3NzNudGVOR3hUekMyY0RMbUE4cEU0a0FJaTk0eDhlNXNDUFY5MGF4MnRZK3hFT3FzcU1DZ1lFQTNsaXEKVk1OMzM5MTR5MktTeXFiSitxNkxVTlRKUi8vZGdGQnNGQUpOZlMvR0M0NENmWGlmMnRsK1d0YmtKVWVxY25oYwpaNlhaMFRYWUpsN2VyNkNQcEFqVWs2MHV3R1QzZVpFblk5c3BBZHhUdDE2KzdwYVRvenNSY3g1aDR6aXdRVVZYClJSUFlKeXlnbFlzZGk1VVhBMGZNTTFDaFpMTzArMVUyTXJEQlZ0OENnWUEvVzJXelNjK29zMW1EOVFZRTd4V3YKdzRMS2grSCtiWG9HUU5uMWZaS2ZWUnVWdjUyOTFFYVNRUG1IT29pS1RjYlJQaGRQaTcrMTQ0RjVpdVd6VkNKMwpmQjNWQ29CMHVmTkR4NGN2eHNPaTlYYUhQTE5GODNPLzJ0blRSVzJldVJFSzZ4MFo5dDVLKzBsY05vK05BUDJ1CmQ1QkMyOGVJU3ZMV0U2VG9BTmZzSndLQmdDUW41T0xOdWxPRDd4MmJsT1V4UkF6b2p5MEF2UTVoTkFLbWtUeWIKdDBBUkliSkZVSEJZeWgzTFdqbXBVZ1loNWp5aEI5MnU0WUdjc041a2RPKzRPME5nVURrSFkxL1R5MDVRWlVoZQpuZ2Q0YllDVy9wTkxsd3huRVlwWHVYRTZpYWJEZ05KeHpLZHFJVjdQOVdqNlFIaS9GeHlORXdHT0czTDNRMDN3CjRpK2ZBb0dBQXBRS3V2TzBnMGFwcDZWOFJkd2JBaWFtVlZFcFlHM2U3NWpxRzBncUVLU01PUFJBWUZuWG5FWUEKNVNPaUVWdFBHLzdySFlaWEZWemhVZDdtZlNiTkh2WWRiQnVjQ1dGQytsdjA5R3Z5dzhFd25jT1hCVzJwYUcxagpKa1FpbE9ORnZUR2Q0WkNYVWZlMDQzS3lMOG83bWRsZ291cU1heG1IYnhDUUlLVUlLT1E9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
//		Token:    "",
//	}
//
//	manageConfig, err := json.MarshalIndent(m, "", "\t")
//	if err != nil {
//		panic(err)
//	}
//
//	fmt.Println(string(manageConfig))
//}
//
//
//
//
//
//func (k *Kubernetes) TerminalBack2(namespace, podname, containername string, upperConn *websocket.Conn) {
//	f := func(cols, rows uint16) (*websocket.Conn, error) {
//		path := fmt.Sprintf("/api/v1/namespaces/%s/pods/%s/exec", namespace, podname)
//		s := `stty cols %d rows %d; s=/bin/sh; if [ -f /bin/bash ]; then s=/bin/bash; fi; `
//		if conf.TerminalSecurity() {
//			s += "if [ `id -un` != dice ]; then su -l dice -s $s; exit $?; fi; "
//		}
//		s += "$s"
//		cmd := url.QueryEscape(fmt.Sprintf(s, cols, rows))
//		query := "command=sh&command=-c&command=" + cmd + "&container=" + containername + "&stdin=1&stdout=1&tty=true"
//
//		var execURL url.URL
//
//		if namespace == "project-2-dev" && containername == "nginx" {
//			namespace = "default"
//			podname = "dice-soldier-6b476c58ff-zz4zb"
//			containername = "soldier"
//			header := http.Header{}
//			//namespace = "devops"
//			//podname = "nginx-deployment-65945b7b5-fdx87"
//			//containername = "nginx"
//			path = fmt.Sprintf("/api/v1/namespaces/%s/pods/%s/exec", namespace, podname)
//			query = "command=sh&command=-c&command=" + cmd + "&container=" + containername + "&stdin=1&stdout=1&tty=true"
//			execURL = url.URL{
//				Scheme: "wss",
//				//Host:     "10.0.6.198:6443",
//				//Host: "183.129.190.107:60066",
//				Host:     "192.168.0.1:443",
//				Path:     path,
//				RawQuery: query,
//			}
//			//selfTokenBase64 := "ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklpSjkuZXlKcGMzTWlPaUpyZFdKbGNtNWxkR1Z6TDNObGNuWnBZMlZoWTJOdmRXNTBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5dVlXMWxjM0JoWTJVaU9pSmtaV1poZFd4MElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl6WldOeVpYUXVibUZ0WlNJNkltUmxkbVZzYjNBdGRHOXJaVzR0ZEd0eE5qSWlMQ0pyZFdKbGNtNWxkR1Z6TG1sdkwzTmxjblpwWTJWaFkyTnZkVzUwTDNObGNuWnBZMlV0WVdOamIzVnVkQzV1WVcxbElqb2laR1YyWld4dmNDSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWeWRtbGpaUzFoWTJOdmRXNTBMblZwWkNJNkltSmtPR00xT0RBeUxXRTJOREl0TVRGbFlpMWlabVV4TFRVeU5UUXdNRGs0T1RWaE5pSXNJbk4xWWlJNkluTjVjM1JsYlRwelpYSjJhV05sWVdOamIzVnVkRHBrWldaaGRXeDBPbVJsZG1Wc2IzQWlmUS5vN3Y4b2kwVV9OOWlfRG5lTDEwa0xxeVVqOTE3Zk5MVlhLWWxSVFVuRkJ4LV9CRzJuRmlrMEN5ZXVJRXBlVGNLTmM4SUFlQ3daTXl1NDVCZDlOYm5vNGdKTFlTRDE0OFVQS3RNZnlVT1QwVkI0Rjk3RUVxNmlSOENiVUhHLUNlNk9lV3NHUm5zbmF3SDRrZmVuT2FnRlVmSEFNa3pPYmQ0V0lmclJTNGhET1Ryb2RQeGltWFRVMEVRZ0hsWlFLMEQxYnYtTVBvT3FvejI4aElyMEhGcHdYVEQtMWJDY2NEeVN0bzdHcFRYRGpfakRHNmNGcm1EeHgxSTdvWWNPZW5Bb1MxbHlKNTg2VG93YmdoaFl1Vm1nMzNBdUJmbDZXQ2NhdEhMV3hlRDNaZWRBejFVdmJLd2xkYWNfcWRYdVhyMUlVak5rYThSclpYbWpGMGVuXzhfUEE="
//			//res := "eyJhbGciOiJSUzI1NiIsImtpZCI6IkVnN0g4NXdNR0NaeTJIdG10Nmx2UzZpb0NJcFNIU3ozOTVfWmk4RnA2RUkifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkZWZhdWx0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImRpY2Utb3BlcmF0b3ItdG9rZW4teHo1em0iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGljZS1vcGVyYXRvciIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjliNDA2ZGNlLTg0OTgtNGFiNi1hZTJjLTE1NDRkNDFhODI2YiIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpkZWZhdWx0OmRpY2Utb3BlcmF0b3IifQ.iz8TjiAY5LzRBk3zt3td1LcrWFP0dAqgLOFXJQ9gVxTcoFLgCzztzzKKJs2xn3q0nEyf56yFfcYcvFuW7rZ2xMvInQC-kPCOpGBpEReR-ZFdI_ONlvq-73GjZI-z-4ijUmg4ioWGe87ab3nS3ddEx4lAhWl4zqgYCVgcwIIwdXrmGWiNVbv0ar-39YbXA4zHEvOvlHGJb3Uvu_fPWzdUIWybUQfezMAqtmuQjZkDXzpIOsR9ABbwTj6dpiy0VCWwAN1r538u28vqi8u672UCMRjMSvNJHHeleUvMXB8vS4kr7pNgCgXq7T1KNfVOozHQ__uMFAqNV3wI9e-LU44hhg"
//			//res, err := base64.StdEncoding.DecodeString(token)
//			//if err != nil {
//			//	logrus.Error(err)
//			//}
//			//req.Header.Add("Authorization", "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6ImxkNHU1MjR2X3FYanpkUldfdTRXY3NfY0M4UU9DQWNXNnlpSjgtWWd2ZE0ifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkZWZhdWx0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImRldmVsb3AtdG9rZW4tcGZ3dHMiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGV2ZWxvcCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6ImE0YWRlYzA0LTdiOWYtNDY1My1hYThhLWE0NjA1MjQ3NWQ4NCIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpkZWZhdWx0OmRldmVsb3AifQ.m-F8F5-XwRmva3jPCix23SWtfXJ6gYQQDJ6yxAJlLsowYvtLO26n2uu5WBdnB98iuae880--9zmKAVkqA0z5bYf__CGQA_k3RQ5Wut4Ll00F5x1yZewvi92oaxXjXPrmFe3AEV2vWCmCnitx_XOEJhPFjeLN81a3-mW-uusuJsbTbKuNjwd9d6fpYadWlx6LrP5D_5XkIaV_l3S6-1yaDFFzK_b6E_Mhm0DrV2tSh9SOHTDPZMbnyfwrSRD576_mSHbpsQeen5veLXJdavFv9loE8nmPnlf43-ciiJyUItKreavBw8FLAW6fJqgYY6pjFYBduWi2z68htLEXUYnvRA")
//			res := "eyJhbGciOiJSUzI1NiIsImtpZCI6IkVnN0g4NXdNR0NaeTJIdG10Nmx2UzZpb0NJcFNIU3ozOTVfWmk4RnA2RUkifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJhZG1pbi10b2tlbi1kOXp3bSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJhZG1pbiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6ImY2NWIwZTk3LWFiMzctNDk5My1iMDBiLTI1ZmQ4YjgyMDJhMSIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlLXN5c3RlbTphZG1pbiJ9.a0FYPpaxjM6GNNMNcMFbykc7TOdrmNHJWQffZqwYFmOG_w_eoUuf6oU-o9VUK0b9DWWA31KMq-goHqpAZFxGWtNSarq6s9PENUH4ZeFGz5tftnY8A_tV26yLajnCwIhB6d3_IAortT669NlbUVVPNd-d97Etf9aE2wUNrIwWLiRlIkyh3IMqQb3UqLGPyez_Bs3t-lsGci_YP9qG7CpCoDuhkCoNAUqydQfx9vGmn8_VKUEhGZo6jHkaADuBRAHuutPxnQJZwCMd_x8jFe_-w4gJEunGyLVrOTcSRi5DiXSi7f90h7mexNJ64fq56pTZtNzzYPQO4kaaDqWF6IV34A"
//			header.Add("Authorization", "Bearer "+string(res))
//			logrus.Infof("[viper] %s", "use token")
//			dialer := websocket.DefaultDialer
//			dialer.NetDialContext = clusterdialer.DialContext("viper")
//			dialer.HandshakeTimeout = 1 * time.Minute
//			//pool := x509.NewCertPool()
//			//caBas64 := "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lVQjJiek5Sckp3ekE4NzRmcEc3N3o5UTlORkpVd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0dERVdNQlFHQTFVRUF4TU5hM1ZpWlhKdVpYUmxjeTFqWVRBZUZ3MHlNVEEwTWpNd01EVTJNREJhRncwMApPREE1TURnd01EVTJNREJhTUJneEZqQVVCZ05WQkFNVERXdDFZbVZ5Ym1WMFpYTXRZMkV3Z2dFaU1BMEdDU3FHClNJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNYV3BEc2R4MVhLWitEK0Zjb1dibCttYnBWd1FPWng4NmwKWGtjZERhM05icDJkT3pqNHNCUU9HanYzcGk1RXZzOEszVEV3emlmQ1dRQzZOS2NNUGZiQTFvTlptUUZ6Y0ZwSwpjWTNnMDhVbUxPbHhwZWtRTkJWdmk0WXI1S1A2a2xxQ1p5SkZkeXVGOW5JckhMN1E1RVIvRTNwcmMwbGhmMHBXCm5XS1Y3NVplek53NDhYVzhQZ0tUUjMyN2pQeEx5eG1yQ01PSGZwN2k5b3hEL1NkbHdaTkJ6alJWOG4zUXN2L1oKMzNuSGhQZFI3MUV3a1FtTjB4Yi9mT244SnFoanVCdXRxejRHN1Bxc055N2M1bmhlVVY0Mnc0Tk9SMHpDY1ZKZQo0N3FNRzQ5RW1WTG05MmVTYXhocmVsWHlsNXBrMVpzTG8zN2o5T05RTVpJTmo0MmFJLzBYQWdNQkFBR2paakJrCk1BNEdBMVVkRHdFQi93UUVBd0lCQmpBU0JnTlZIUk1CQWY4RUNEQUdBUUgvQWdFQ01CMEdBMVVkRGdRV0JCUW4KZ3N6OUhTMWp2NkVtcTlFSHB6VHZLekgvTkRBZkJnTlZIU01FR0RBV2dCUW5nc3o5SFMxanY2RW1xOUVIcHpUdgpLekgvTkRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVVvK1BuQVpYdVZWaElhRmphTENZSnBzUis4MDY2WHlqCkpsQ2lFSnc4YVRiQjI3ZVVXZTUrYU4yL2NrZFpWc3R5WHVnZ2RVRkdkeTJiOXhsbitwdjgwZSsxbkpHRDRGZTkKQUZQNUt6L09BbWMyZlQ5Y0Z4TmNXRjRPYUZRWmZ5ampUb0JLWjA3VXpMNXJsbVRJZUtsNCtnUnhYbXJYWmY3bgpMZGV4bjVwL2pKU29tTXV5OXU0QjVkSkZGOVdKSW4vcmZiYmtwN0pJclRMam9seFNoS1p4cFBXUk5ZWCsvRk1hCjZBTitwZkJsTTFLbUpkUEd2d3NhYzBHUExndUxJaXBpNTVoMXhZRDhPN25nZzNzSFBaVnk2b1FDS3BsZjB3M2oKT0crYVh4QU5PVDhweG5SMDBJWldZYThKdW85NC9peWFKTGs2d2JMeFZIb25WWU93UVNZNlVBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
//			//caBas64 := "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJd01EZ3dNekV3TVRZd09Wb1hEVE13TURnd01URXdNVFl3T1Zvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTWVVClM3cDI2YmhNQUlxRncydDc4VjAzWkoyNnRDSTUwU2tJZjlsV1VGbEtIUXRYYmJndUJSNFRlbjM3aXJUeUJIcm8KbStXSHFxNjIzMXpEZHNJQjVUb1MySVpNWm9nZEx6VkMxYzRLWE9oNXo3YlZmZnZXUnQ2czQ2bExRbzhDWVloRAppYlRMTTZBazlJejZJRHBJUHlYNjJ6REtkaEw5anFoWmpac3NRL3RTQVE0eDJyV2hSSjBvZEQ2ZzczQk1SV3lzCkJCbDVxRDEzeWF3MkJqMkkrbWEzQWxDRFFCL3NwMXZ3dUJCTEdNK01CdjZ4cG1EZndRTmVEb2srWU82Y3Z0cnYKdmdObndJUDAxRVQ3L2VmdldaTjE1TE1zMVZGU0w1WHdmUGZ0dDB2bnFtTWhEQjFYSGFaWUVjMkpFZTgra3NyTgpiSm9Fc3NYYkRCVEo1MXVzL0tVQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFEWVBLcXFaWnBFcktkNmxTaHhVN1l1V014QS8KcXRpbjFNQldMWmdSWDcyWDN3UnRqbUYxQkhJZithRklRK296blpxQUNTNWRSV2JZdjhZSnd5bVBTUlZGcUxJWApMUDB4Y0diaDF4dW04ZmpxN3RhZGRRVzVxUk9IWUYyQmFHTUh5a0RNV3hsOTNvcmZMdmN3bGJjaGpWOGdBSVl0ClgyUXBxMVpYY0o5VlU0ZTVydHp6cXNsaVgzTUNwOFZzZnBSaGw3MnVIWkd3SXN1eTBRNk5kODZxZHcwclFGQ0cKa3F4WGcydGljczBmeURJY3FmQnNFaURhejgvelFWSnFrOTlFWW5mSmdqZmlYdGNyN1lPQlNvUkV6KzZkekV5TwpvZ1FSVXk4RWQ1YTFuQ3VDblVzSHBCM2dodGI2ODdwaFJYREVKMmozeEJuZmx3Z2IveEt0S2NBK2xZYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
//			//caBas64 := "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQ2ekNDQXRPZ0F3SUJBZ0lETVU0bE1BMEdDU3FHU0liM0RRRUJDd1VBTUdveEtqQW9CZ05WQkFvVElXTmkKT1dJMU5qSTRNelV5TmpjMFlqSmhPR0ZpWldJelpXRXdOV0V6TVRjME1ERVFNQTRHQTFVRUN4TUhaR1ZtWVhWcwpkREVxTUNnR0ExVUVBeE1oWTJJNVlqVTJNamd6TlRJMk56UmlNbUU0WVdKbFlqTmxZVEExWVRNeE56UXdNQjRYCkRUSXhNRFV4TWpBek1qRXdNRm9YRFRReE1EVXdOekF6TWpZeE1Wb3dhakVxTUNnR0ExVUVDaE1oWTJJNVlqVTIKTWpnek5USTJOelJpTW1FNFlXSmxZak5sWVRBMVlUTXhOelF3TVJBd0RnWURWUVFMRXdka1pXWmhkV3gwTVNvdwpLQVlEVlFRREV5RmpZamxpTlRZeU9ETTFNalkzTkdJeVlUaGhZbVZpTTJWaE1EVmhNekUzTkRBd2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDNTVFVU9vengxSDZDVlR6b1Z5YittditWamI4UEsKY2lVY1d5Ry8rZnhjR2p5VzRQeUpPQTE1S1pLUGtoUklWV2N0amlQVE50ZDNyTUwvRU8xMkFPTksva3NNeW15SgpuWFp6YUw5VmtQcHFyeDVWdG1FM3VUd0RFZ0lSbkM2amVMVWZGRkpoSFY2a0pTREtMdXIwUG1CTTJER0dWZHRECktqSjk2amIydFJrbFpWRVlZMElqaHZYSFF6d3dDM2E1OEh6ajYwQ015NmFzYzBKbUdLZVdxUERMdEgrUVlYSG4KYjQ1cGhvWHVNOFJMbnpBTGx3RWNzS0VsV1hCOVlremtPQVlZMzJtUWxnbEJLdnNlemNxY2V5VVBJZnVwWG1sMwpZNEd1d3Y4bUxpcEFKSWxqZ0VxSFlCcUV6NjhZdFYrekh3UHQwRDZMOVRudGZXMVFYancwRUJhOUFnTUJBQUdqCmdaa3dnWll3RGdZRFZSMFBBUUgvQkFRREFnS3NNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdQQVlJS3dZQkJRVUgKQVFFRU1EQXVNQ3dHQ0NzR0FRVUZCekFCaGlCb2RIUndPaTh2WTJWeWRITXVZV056TG1Gc2FYbDFiaTVqYjIwdgpiMk56Y0RBMUJnTlZIUjhFTGpBc01DcWdLS0FtaGlSb2RIUndPaTh2WTJWeWRITXVZV056TG1Gc2FYbDFiaTVqCmIyMHZjbTl2ZEM1amNtd3dEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSjcvVXA1ZDlORXhwNCtKWlErQlZlYjcKY2VGTHptMEc3TCs1anNKZ3dka0UweWNvTSsyUFowSnI2cmRJZWticE9weVZNSllTNVhBZHNsSHhNK21MRTFybwpYbE42cWpGNVVsbE9oVjllanRZSVh6T0JsZ1FXd2VDeTU2djRsSlhoVmpKM1REMlFHVVl3alZaaVJ2ZzBuUC9SCmM3anlFT2RmOHdxZFBOa20xaTdBMXNLZksvVFJVZ3BSWDRJTW9xbURxZjZqd0k4clJxOGpQb1BsMXNTOFdEbjAKVGV6QVQ0R0JuMGZTMWRoeEhnd3RwNmJERkcveFozVFY4SDcydkZ2U0toU1FKRzNrN1JRSFFHQWhwZ01aU3dOeQpITVNSeUVmVTRlUTRmMlYrQ3hCL1YvTWQzczVTS0xyZ2E2UElVMmV4cVl6U1VqOHJreHJmbktrbGU5djdzZHc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
//			//certBas64 := "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUekNDQWplZ0F3SUJBZ0lVTnQ5ZlVKRnBiRk85OW9mTlI3K1Y1Z25MeHJjd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0dERVdNQlFHQTFVRUF4TU5hM1ZpWlhKdVpYUmxjeTFqWVRBZUZ3MHlNVEEwTWpNd01EVTJNREJhRncwMApPREE1TURnd01EVTJNREJhTURReEZ6QVZCZ05WQkFvVERuTjVjM1JsYlRwdFlYTjBaWEp6TVJrd0Z3WURWUVFECkV4QnJkV0psY201bGRHVnpMV0ZrYldsdU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQTI2V01wRk5iZzZCUmJFbDlYd1dzZVd1V28rbEFaVTFad1BrZUw3bE1ZUzFrd0dLQmUxKys0Z21mV0E4dAoyd0UxcFp0cDB2SGhhWlFWWG5wTDhJK2NUQVZIR2kxOUpKaDRwSHo4dWFUSHBpUjcyNlRXdTc4N1FOM3pMY2JnCmwzSXRDU3Z2TmJZUjc4cXJuMjRIdUd3TjhKOE5NY0tSR0Z3dWo3WXpGMXFaSkMrRTJIS2c0NUMzZVJEZHVPamQKamhEakhvbE5PYU5HRXh1SU5JSVlIK0JqSE1YVFlOZHMxdWdhL0hOVW1NQ053R3JiZFA3RjY2ZWh1aDZJdXN3TAp6L01IaU9NK0IrS29hY2ZCWW9nbUdhVTk0VC9qaHZXRHR2ZGh6Ujg0NHU1YVV1b1dNYWFSSW1zWXcrWHdhRW5kCjV3Ukk3WEJHK0hUaHJDZzBWMEFKQnBkZC9RSURBUUFCbzNVd2N6QU9CZ05WSFE4QkFmOEVCQU1DQmFBd0V3WUQKVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWRCZ05WSFE0RUZnUVVXWkFYOHgxNApFNzJMNGdudWJmSjlVeGFPbnBzd0h3WURWUjBqQkJnd0ZvQVVKNExNL1IwdFk3K2hKcXZSQjZjMDd5c3gvelF3CkRRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFEMHg5enZCTGJIcjJjZEtmZE9JakxRcThDWmNveUp1aDBpL2pob2wKUCtKOHdWOVNBdUU4VDBNdXN3SjRWdTErWjNtNVFjLzVjbnpueVV3SCtFbWw4ZnQ0SnZoTTV5a3NWalhMQ1ZHMwpwRlpvUVRrQllDS0VyeldHUk5VNGVGakwwL0FlS214WHRJU2pUNnJsdm9SS0s1bXo5WHREb1cyN0JEb3Z1UTJSCjMrRlBkK1d1V3hiUzRZSXJuNFlRc2s3dGl1NnlROWdKTHAyN3Q1K2pHc1NtUlNzNHNyaWFRM1NJOUVGc202cEcKQ3ZkUmVUdnplMVp4RzlRMTJSUy9VVkFoenhZLzZOT1RTd25xdkthV2JYcUk3R29nVFc5S2pLdDMwajVXTHppZgoyNXZXd1FHbHAwRC85R01IeVAvUGhxRzMvbVl4dThJNVhMY2lJcnpaNTZjQkh4Yz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
//			//keyBas64 := "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBMjZXTXBGTmJnNkJSYkVsOVh3V3NlV3VXbytsQVpVMVp3UGtlTDdsTVlTMWt3R0tCCmUxKys0Z21mV0E4dDJ3RTFwWnRwMHZIaGFaUVZYbnBMOEkrY1RBVkhHaTE5SkpoNHBIejh1YVRIcGlSNzI2VFcKdTc4N1FOM3pMY2JnbDNJdENTdnZOYllSNzhxcm4yNEh1R3dOOEo4Tk1jS1JHRnd1ajdZekYxcVpKQytFMkhLZwo0NUMzZVJEZHVPamRqaERqSG9sTk9hTkdFeHVJTklJWUgrQmpITVhUWU5kczF1Z2EvSE5VbU1DTndHcmJkUDdGCjY2ZWh1aDZJdXN3THovTUhpT00rQitLb2FjZkJZb2dtR2FVOTRUL2podldEdHZkaHpSODQ0dTVhVXVvV01hYVIKSW1zWXcrWHdhRW5kNXdSSTdYQkcrSFRockNnMFYwQUpCcGRkL1FJREFRQUJBb0lCQUJYTzR4N3hzOVZtMW83RQo0VERORkduZDE5QWdlYWRWUGNNZU9QUU9GdHBUTW55eml4MmZ6UWtPWVliUnd3REtwdlB4Y1ZsamNMa1YzZVZLCmlUMnlWSmRyc3JxVHA2ZzVoMGoxcS9ZV3VVZnl1V1YrZ1YrVXhpSlRwekIxWFpsTDJkTGVUTnJ0WCt5S0YrNDEKYzRqSkdiMDVYWXNDUVh2RXMwN0xqVmtWUXIxSDExNDhOMWVJYXJyWjVGbkg4dVBHdDZLNWhJOXlsVHlYekZWMgpDZDc4WUw4U3NYTENCS2JYdzNpOGVSZForSEZWUnprSHVCa1JvcC9LTHNEOUxnUDdSZC9XOE8xZGxtQjVPcCtBCnlZbm5DYXVtQzFLL3ZtTXFTWEMreWc1UXoycFFTYzlwUjNRWGhma3dyWmhhNXRDVTltWlJQbDQ5anNldVpsWTgKekdlSGE5VUNnWUVBL09SSFk3T0ZuUG93Q3ZRcVlLZU8yVVgzOUpEeTFIR3pvSytnelczSWFnVHc5NlZmaFlzSgprT0x6QStvYkRJNW1tL1pYZnJMektaSWhpZG9ac3RtSU4vdTNuRGZuYWx0MThtcVprVHhnb2d2SGdiSDh0R2c5CnkyOGw3NzNudGVOR3hUekMyY0RMbUE4cEU0a0FJaTk0eDhlNXNDUFY5MGF4MnRZK3hFT3FzcU1DZ1lFQTNsaXEKVk1OMzM5MTR5MktTeXFiSitxNkxVTlRKUi8vZGdGQnNGQUpOZlMvR0M0NENmWGlmMnRsK1d0YmtKVWVxY25oYwpaNlhaMFRYWUpsN2VyNkNQcEFqVWs2MHV3R1QzZVpFblk5c3BBZHhUdDE2KzdwYVRvenNSY3g1aDR6aXdRVVZYClJSUFlKeXlnbFlzZGk1VVhBMGZNTTFDaFpMTzArMVUyTXJEQlZ0OENnWUEvVzJXelNjK29zMW1EOVFZRTd4V3YKdzRMS2grSCtiWG9HUU5uMWZaS2ZWUnVWdjUyOTFFYVNRUG1IT29pS1RjYlJQaGRQaTcrMTQ0RjVpdVd6VkNKMwpmQjNWQ29CMHVmTkR4NGN2eHNPaTlYYUhQTE5GODNPLzJ0blRSVzJldVJFSzZ4MFo5dDVLKzBsY05vK05BUDJ1CmQ1QkMyOGVJU3ZMV0U2VG9BTmZzSndLQmdDUW41T0xOdWxPRDd4MmJsT1V4UkF6b2p5MEF2UTVoTkFLbWtUeWIKdDBBUkliSkZVSEJZeWgzTFdqbXBVZ1loNWp5aEI5MnU0WUdjc041a2RPKzRPME5nVURrSFkxL1R5MDVRWlVoZQpuZ2Q0YllDVy9wTkxsd3huRVlwWHVYRTZpYWJEZ05KeHpLZHFJVjdQOVdqNlFIaS9GeHlORXdHT0czTDNRMDN3CjRpK2ZBb0dBQXBRS3V2TzBnMGFwcDZWOFJkd2JBaWFtVlZFcFlHM2U3NWpxRzBncUVLU01PUFJBWUZuWG5FWUEKNVNPaUVWdFBHLzdySFlaWEZWemhVZDdtZlNiTkh2WWRiQnVjQ1dGQytsdjA5R3Z5dzhFd25jT1hCVzJwYUcxagpKa1FpbE9ORnZUR2Q0WkNYVWZlMDQzS3lMOG83bWRsZ291cU1heG1IYnhDUUlLVUlLT1E9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
//			//caByes, err := base64.StdEncoding.DecodeString(caBas64)
//			//if err != nil {
//			//	logrus.Error(err)
//			//}
//			certBas64 := "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURSekNDQWkrZ0F3SUJBZ0lJWTB3QUQ1dzlBYkl3RFFZSktvWklodmNOQVFFTEJRQXdhakVxTUNnR0ExVUUKQ2hNaFkySTVZalUyTWpnek5USTJOelJpTW1FNFlXSmxZak5sWVRBMVlUTXhOelF3TVJBd0RnWURWUVFMRXdkawpaV1poZFd4ME1Tb3dLQVlEVlFRREV5RmpZamxpTlRZeU9ETTFNalkzTkdJeVlUaGhZbVZpTTJWaE1EVmhNekUzCk5EQXdIaGNOTWpFd05URXlNRE15TVRBd1doY05NekV3TlRFd01ETXpNRFExV2pBME1SY3dGUVlEVlFRS0V3NXoKZVhOMFpXMDZiV0Z6ZEdWeWN6RVpNQmNHQTFVRUF4TVFhM1ZpWlhKdVpYUmxjeTFoWkcxcGJqQ0NBU0l3RFFZSgpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMY2VYbWV2aldxTmVCdW50Wk9qc3RId1BieUxidTBsCnFhV1hzYW1wS1hRMFRYVVBmUjM4SFlVaEYwV2xiWmxST3ZYNnJqZkhpU1hLaUROUEJGKzkxdTdscThQaVpmRTAKM2t1anNqWVF2UThCenA2YjhtdW4zWDE3Z0YzN3ZkNGxMU210TFRZYUk3WllrWGs1dVZaa0llbEg2ZVZQVThvMgo2ditsNHB3MU9hQThiTmd6VHE1T2hKWFA2eU10clBQM3BZTHh1N3RaKy9RdENya3dnaE5Bc1FZUlVuSGN0TWVtCmU3Um81SU1neFhVQUdxeGs1UW9tUzlPRU93K3MxOUxDc3MvZmM5VjU2LzVsZkVDWWh3MGZvWXRmSHZPQmpvbDkKM3d2azFNU3k4OUlOVWFHOU03amVYWUxZb0t5U3E4Smh4TXVoVUtxSXVpSlo5OER5YTlPQTBXY0NBd0VBQWFNbgpNQ1V3RGdZRFZSMFBBUUgvQkFRREFnV2dNQk1HQTFVZEpRUU1NQW9HQ0NzR0FRVUZCd01DTUEwR0NTcUdTSWIzCkRRRUJDd1VBQTRJQkFRQzBRV2sxK0N1RzBlVE5ucUxoem9mRUtKMnR0RE93T2NZY1VZWjF5UEpqLzB1bmM2emUKRFVvL3UxYWZiRDJxeGxXQTl3U3I5amZVQ1h2eUZ3ZFg0L2hwcG9sVVZVSnVMRXNWVkpvZ3JHZmRaY09VR3hkMQp4MVBGSWVsNWtXZUgxTUpVNGV0NzVDbVIrNi9TOTgxZDkvaW9FV05HUG0vcVlMV1k4RkRaK1ZJNmw0NStyTWRjClVUMVExVHZSeXNXOEVtem5FTm5DeUNOWnhZeW9EejM0d2FHeVhOS2FuYlhHeVVqRFhKLzVyakVFOVpLU1hBMFIKK0RaM0Y5S1Q4WTRJUlVLK3BZVlg2OW82RGRoN3JEbS9KaWJFSDdNeHFvemlYVG55ZVZsZmxWQmdmeFVzV2FSeApvYmR5SThweW9YKzBTb01HOCszZXZLUDkrOHd1ckhhSjZmcUQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
//			keyBas64 := "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdHg1ZVo2K05hbzE0RzZlMWs2T3kwZkE5dkl0dTdTV3BwWmV4cWFrcGREUk5kUTk5Ckhmd2RoU0VYUmFWdG1WRTY5ZnF1TjhlSkpjcUlNMDhFWDczVzd1V3J3K0psOFRUZVM2T3lOaEM5RHdIT25wdnkKYTZmZGZYdUFYZnU5M2lVdEthMHROaG9qdGxpUmVUbTVWbVFoNlVmcDVVOVR5amJxLzZYaW5EVTVvRHhzMkROTwpyazZFbGMvckl5MnM4L2VsZ3ZHN3Uxbjc5QzBLdVRDQ0UwQ3hCaEZTY2R5MHg2Wjd0R2prZ3lERmRRQWFyR1RsCkNpWkwwNFE3RDZ6WDBzS3l6OTl6MVhuci9tVjhRSmlIRFIraGkxOGU4NEdPaVgzZkMrVFV4TEx6MGcxUm9iMHoKdU41ZGd0aWdySktyd21IRXk2RlFxb2k2SWxuM3dQSnIwNERSWndJREFRQUJBb0lCQUdxMmwrMTBzTVRYakpjUgpOUS9FNWdEU01DZ2dXWlI1emxOaUEzY0x6Y3lhYmtrNXJZQTczRGdwQUpibHdPa0lIWVFiZ2t1ZlRKMXBXZFlNCnhrL0ZJZXcyaTlLcnJSelQ0bmZSL1pqa1NFam1sTEo1enR4T0J4V0pVMVZ4ejBRV0JpdXpjQldIUmlpTmxMbEEKbW5GdUNSVVpnNFRPcGRYQ0MxRFFLeTg5RlVmNjhSQUxvcGwvZEFZdDhMNnA2MUMwS2lGRFhLZWdZSXFGcmYveAoxSjZDV0pSZWxkM1BwSUIwTG5wcUpQamp5TzdXZlZ2bDdsdGZraEgvZDVOaDhIdUQ5c1UzQ0ZPZ1hVUHQ0YjZUClpzclU4WFQ1eFVtYWF3QVp5Uk9uWndDUVhUMnRMRVFZejV6ZzFNR0VLWUhBU1A4clcxb2tOZWNidVNkZWY1ekMKbTFHaE9vRUNnWUVBNzMySDF3L2U1K3B3MnV0WHFtcUo5VG05dkhyNU1rYStxMFFLYVBvcjhkVlFrMTRRNVZiRwpGT3FMWjExK2ZsNlFnYXpWT1ZTczJydVFWS2ZreEtGT2lNMFN3bU9yanlXTFh6MmdjaEREWHhrbDIzZ0NFQ0NhCkxjVjBRWUo4MHdVZmtwODcxUVVpY2NoV25oZktwaUFpVnNNbXBMTENUZ05lQlJ5RU5tT1NRVDBDZ1lFQXc3NEEKMFpDeHpPU2czZkVXblFKb1FPMHpsUUN4WWh4SWtJb1FNRjVRK1BPdVZxUnZxMHcvTnk0VmVlakVER2ZYT1d5Mwptdmd5UHhzTmQ5QmtNNWxZelBjN1NDbkk0eGVmMXdDdXNFckpkbVVRY05OVjlVYmNINlpzVWphVVRtVFVKNUZUCk9vV0I0NC9lNjN1NkhYSkhaeUhtV1JqTDQrVlhScVlocitLMXYzTUNnWUVBem5hSERFWDNZakkvdHN1YkdTU2QKNkpZdDEzYWdyTkpHZ0RtNVM4VVk2M1I5OFgzdnpQY2c3MWxBY3cwc0J0K1pidUhFTkplbUtTLzMvck43U25UUgowcWdRMnhxNEJVRlZ4UGJKQW0wbk1TM3A4Q21taGFiRnBGNE1tb2xXK1VqNmJobnVwL2UwT1NtQVd1eWgzTlBwCkpxazVBRlhIb3gvT0IxUU5PeUplTFBVQ2dZQnpVWE1HQTZyY1BTMlEwOEl3eWdSRmkvbEJwV0RibmpJYUJWeTQKUWppT0VuSDVWWEw4aGpVUCt6Um4xL3Y0R3cwdkpaK2R5dTgvUWw3UzRaREczV2IxaWdvQTM2MGNMUVRjRStqVwpyNWkxQ2FGLzl1SERXUFhDSjdmVlQ1WmNBUWNFTUpmSitIR25jVkV4aG5rRmRCZ2c2RlhlMDc3N0NsZzZwUkZmCm43N1hoUUtCZ0NpVXM1UGJpcms4OFVCQXFyZE1RTmNldzM5UFlsdmIrdGMrWmRwSVhHMGpnSmtIeGtCbjY1Q3kKblBtODBkZUNoZ0ZJQm5QUnhFRDZkUDlZUmpJVTZXcmlVamxEa2pINzVjZDFCQW5sY3NVS2dUd1NyblBzOWlzegpWbVBCUUNhMURDZWw4ZHlvd0d5MWF3a0ppNU9odUcrMkU5bmNlMkVlZmpuUXFtSnE1Y1pQCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
//			certByes, err := base64.StdEncoding.DecodeString(certBas64)
//			if err != nil {
//				logrus.Error(err)
//			}
//			keyByes, err := base64.StdEncoding.DecodeString(keyBas64)
//			if err != nil {
//				logrus.Error(err)
//			}
//			//pool.AppendCertsFromPEM(caByes)
//			_, err = tls.X509KeyPair(certByes, keyByes)
//			if err != nil {
//				logrus.Fatalf("LoadX509KeyPair: %v", err)
//			}
//			dialer.TLSClientConfig = &tls.Config{
//				InsecureSkipVerify: true,
//				NextProtos:         []string{"http/1.1"},
//				//RootCAs: pool,
//				//Certificates: []tls.Certificate{pair},
//			}
//			//if req.Header.Get("X-Portal-Host") != "" {
//			//	req.Header.Add("Host", req.Header.Get("X-Portal-Host"))
//			//}
//			//logrus.Info("[viper]", execURL.String())
//
//			//req.Header.Add("X-Portal-Websocket", "on")
//			conn, resp, err := dialer.Dial(execURL.String(), header)
//			if err != nil {
//				logrus.Errorf("[viper] failed to connect to %s: %v", execURL.String(), err)
//				logrus.Errorf("[viper] %+v", resp)
//				logrus.Errorf("[viper] %+v", resp.Request)
//				res := make([]byte, 256)
//				for {
//					n, err := resp.Body.Read(res)
//					logrus.Error("[viper]", string(res[:n]))
//					if err == io.EOF {
//						break
//					}
//				}
//			}
//
//			return conn, nil
//		} else {
//			req, err := customhttp.NewRequest("GET", k.addr, nil)
//			if err != nil {
//				logrus.Errorf("[viper] failed to customhttp.NewRequest: %v", err)
//				return nil, err
//			}
//
//			execURL = url.URL{
//				Scheme:   "ws",
//				Host:     req.URL.Host,
//				Path:     path,
//				RawQuery: query,
//			}
//			if req.Header.Get("X-Portal-Host") != "" {
//				req.Header.Add("Host", req.Header.Get("X-Portal-Host"))
//			}
//			logrus.Info("[viper]", execURL.String())
//
//			req.Header.Add("X-Portal-Websocket", "on")
//			conn, _, err := websocket.DefaultDialer.Dial(execURL.String(), req.Header)
//			if err != nil {
//				logrus.Errorf("[viper] failed to connect to %s: %v", execURL.String(), err)
//				return nil, err
//			}
//			return conn, nil
//		}
//	}
//	var conn *websocket.Conn
//	var waitConn sync.WaitGroup
//	waitConn.Add(1)
//	var setsizeOnce sync.Once
//	var wait sync.WaitGroup
//	wait.Add(2)
//	go func() {
//		defer func() {
//			wait.Done()
//			if conn != nil {
//				conn.Close()
//			}
//			upperConn.Close()
//		}()
//		waitConn.Wait()
//		for {
//			if conn == nil {
//				return
//			}
//			tp, m, err := conn.ReadMessage()
//			if err != nil {
//				return
//			}
//			m[0] = Output
//			if conf.TerminalSecurity() {
//				m = hidePassEnv(m)
//			}
//			if err := upperConn.WriteMessage(tp, m); err != nil {
//				return
//			}
//		}
//	}()
//	go func() {
//		defer func() {
//			wait.Done()
//			if conn != nil {
//				conn.Close()
//			}
//			upperConn.Close()
//		}()
//		for {
//			tp, m, err := upperConn.ReadMessage()
//			if err != nil {
//				return
//			}
//			switch m[0] {
//			case Input:
//				if conn == nil {
//					continue
//				}
//				m[0] = 0 // k8s 协议, stdin = 0
//				if err := conn.WriteMessage(tp, m); err != nil {
//					return
//				}
//			case SetSize:
//				var err error
//				setsizeOnce.Do(func() {
//					var v Winsize
//					err = json.Unmarshal(m[1:], &v)
//					if err != nil {
//						return
//					}
//					conn, err = f(v.Cols, v.Rows)
//					waitConn.Done()
//					if err != nil {
//						logrus.Errorf("[viper] failed to connect k8s exec ws: %v", err)
//						return
//					}
//				})
//				if err != nil {
//					return
//				}
//			default:
//				continue
//			}
//		}
//	}()XXXX
//	wait.Wait()
//}
//
//func (k *Kubernetes) TerminalBack(namespace, podname, containername string, upperConn *websocket.Conn) {
//	f := func(cols, rows uint16) (*websocket.Conn, error) {
//		path := fmt.Sprintf("/api/v1/namespaces/%s/pods/%s/exec", namespace, podname)
//		s := `stty cols %d rows %d; s=/bin/sh; if [ -f /bin/bash ]; then s=/bin/bash; fi; `
//		if conf.TerminalSecurity() {
//			s += "if [ `id -un` != dice ]; then su -l dice -s $s; exit $?; fi; "
//		}
//		s += "$s"
//		cmd := url.QueryEscape(fmt.Sprintf(s, cols, rows))
//		query := "command=sh&command=-c&command=" + cmd + "&container=" + containername + "&stdin=1&stdout=1&tty=true"
//
//		req, err := customhttp.NewRequest("GET", k.addr, nil)
//		if err != nil {
//			logrus.Errorf("[viper] failed to customhttp.NewRequest: %v", err)
//			return nil, err
//		}
//
//		var execURL url.URL
//
//		if namespace == "project-2-dev" && containername == "nginx" {
//			namespace = "default"
//			podname = "dice-soldier-6b476c58ff-zz4zb"
//			containername = "soldier"
//			path = fmt.Sprintf("/api/v1/namespaces/%s/pods/%s/exec", namespace, podname)
//			execURL = url.URL{
//				Scheme: "wss",
//				//Host:     "10.0.6.198:6443",
//				//Host:     "183.129.190.107:60066",
//				Host:     "192.168.0.1:443",
//				Path:     path,
//				RawQuery: query,
//			}
//			//selfTokenBase64 := "ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklpSjkuZXlKcGMzTWlPaUpyZFdKbGNtNWxkR1Z6TDNObGNuWnBZMlZoWTJOdmRXNTBJaXdpYTNWaVpYSnVaWFJsY3k1cGJ5OXpaWEoyYVdObFlXTmpiM1Z1ZEM5dVlXMWxjM0JoWTJVaU9pSmtaV1poZFd4MElpd2lhM1ZpWlhKdVpYUmxjeTVwYnk5elpYSjJhV05sWVdOamIzVnVkQzl6WldOeVpYUXVibUZ0WlNJNkltUmxkbVZzYjNBdGRHOXJaVzR0ZEd0eE5qSWlMQ0pyZFdKbGNtNWxkR1Z6TG1sdkwzTmxjblpwWTJWaFkyTnZkVzUwTDNObGNuWnBZMlV0WVdOamIzVnVkQzV1WVcxbElqb2laR1YyWld4dmNDSXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWeWRtbGpaUzFoWTJOdmRXNTBMblZwWkNJNkltSmtPR00xT0RBeUxXRTJOREl0TVRGbFlpMWlabVV4TFRVeU5UUXdNRGs0T1RWaE5pSXNJbk4xWWlJNkluTjVjM1JsYlRwelpYSjJhV05sWVdOamIzVnVkRHBrWldaaGRXeDBPbVJsZG1Wc2IzQWlmUS5vN3Y4b2kwVV9OOWlfRG5lTDEwa0xxeVVqOTE3Zk5MVlhLWWxSVFVuRkJ4LV9CRzJuRmlrMEN5ZXVJRXBlVGNLTmM4SUFlQ3daTXl1NDVCZDlOYm5vNGdKTFlTRDE0OFVQS3RNZnlVT1QwVkI0Rjk3RUVxNmlSOENiVUhHLUNlNk9lV3NHUm5zbmF3SDRrZmVuT2FnRlVmSEFNa3pPYmQ0V0lmclJTNGhET1Ryb2RQeGltWFRVMEVRZ0hsWlFLMEQxYnYtTVBvT3FvejI4aElyMEhGcHdYVEQtMWJDY2NEeVN0bzdHcFRYRGpfakRHNmNGcm1EeHgxSTdvWWNPZW5Bb1MxbHlKNTg2VG93YmdoaFl1Vm1nMzNBdUJmbDZXQ2NhdEhMV3hlRDNaZWRBejFVdmJLd2xkYWNfcWRYdVhyMUlVak5rYThSclpYbWpGMGVuXzhfUEE="
//			res := "eyJhbGciOiJSUzI1NiIsImtpZCI6IkVnN0g4NXdNR0NaeTJIdG10Nmx2UzZpb0NJcFNIU3ozOTVfWmk4RnA2RUkifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkZWZhdWx0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImRpY2Utb3BlcmF0b3ItdG9rZW4teHo1em0iLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGljZS1vcGVyYXRvciIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjliNDA2ZGNlLTg0OTgtNGFiNi1hZTJjLTE1NDRkNDFhODI2YiIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpkZWZhdWx0OmRpY2Utb3BlcmF0b3IifQ.iz8TjiAY5LzRBk3zt3td1LcrWFP0dAqgLOFXJQ9gVxTcoFLgCzztzzKKJs2xn3q0nEyf56yFfcYcvFuW7rZ2xMvInQC-kPCOpGBpEReR-ZFdI_ONlvq-73GjZI-z-4ijUmg4ioWGe87ab3nS3ddEx4lAhWl4zqgYCVgcwIIwdXrmGWiNVbv0ar-39YbXA4zHEvOvlHGJb3Uvu_fPWzdUIWybUQfezMAqtmuQjZkDXzpIOsR9ABbwTj6dpiy0VCWwAN1r538u28vqi8u672UCMRjMSvNJHHeleUvMXB8vS4kr7pNgCgXq7T1KNfVOozHQ__uMFAqNV3wI9e-LU44hhg"
//			//res, err := base64.StdEncoding.DecodeString(selfTokenBase64)
//			//if err != nil {
//			//	logrus.Error(err)
//			//}
//			//req.Header.Add("Authorization", "Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6ImxkNHU1MjR2X3FYanpkUldfdTRXY3NfY0M4UU9DQWNXNnlpSjgtWWd2ZE0ifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkZWZhdWx0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6ImRldmVsb3AtdG9rZW4tcGZ3dHMiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiZGV2ZWxvcCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6ImE0YWRlYzA0LTdiOWYtNDY1My1hYThhLWE0NjA1MjQ3NWQ4NCIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpkZWZhdWx0OmRldmVsb3AifQ.m-F8F5-XwRmva3jPCix23SWtfXJ6gYQQDJ6yxAJlLsowYvtLO26n2uu5WBdnB98iuae880--9zmKAVkqA0z5bYf__CGQA_k3RQ5Wut4Ll00F5x1yZewvi92oaxXjXPrmFe3AEV2vWCmCnitx_XOEJhPFjeLN81a3-mW-uusuJsbTbKuNjwd9d6fpYadWlx6LrP5D_5XkIaV_l3S6-1yaDFFzK_b6E_Mhm0DrV2tSh9SOHTDPZMbnyfwrSRD576_mSHbpsQeen5veLXJdavFv9loE8nmPnlf43-ciiJyUItKreavBw8FLAW6fJqgYY6pjFYBduWi2z68htLEXUYnvRA")
//			req.Header.Add("Authorization", "Bearer "+string(res))
//			logrus.Infof("[viper] %s", "use token")
//			dialer := websocket.DefaultDialer
//			dialer.NetDialContext = clusterdialer.DialContext("viper")
//			pool := x509.NewCertPool()
//			//caBas64 := "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lVQjJiek5Sckp3ekE4NzRmcEc3N3o5UTlORkpVd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0dERVdNQlFHQTFVRUF4TU5hM1ZpWlhKdVpYUmxjeTFqWVRBZUZ3MHlNVEEwTWpNd01EVTJNREJhRncwMApPREE1TURnd01EVTJNREJhTUJneEZqQVVCZ05WQkFNVERXdDFZbVZ5Ym1WMFpYTXRZMkV3Z2dFaU1BMEdDU3FHClNJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNYV3BEc2R4MVhLWitEK0Zjb1dibCttYnBWd1FPWng4NmwKWGtjZERhM05icDJkT3pqNHNCUU9HanYzcGk1RXZzOEszVEV3emlmQ1dRQzZOS2NNUGZiQTFvTlptUUZ6Y0ZwSwpjWTNnMDhVbUxPbHhwZWtRTkJWdmk0WXI1S1A2a2xxQ1p5SkZkeXVGOW5JckhMN1E1RVIvRTNwcmMwbGhmMHBXCm5XS1Y3NVplek53NDhYVzhQZ0tUUjMyN2pQeEx5eG1yQ01PSGZwN2k5b3hEL1NkbHdaTkJ6alJWOG4zUXN2L1oKMzNuSGhQZFI3MUV3a1FtTjB4Yi9mT244SnFoanVCdXRxejRHN1Bxc055N2M1bmhlVVY0Mnc0Tk9SMHpDY1ZKZQo0N3FNRzQ5RW1WTG05MmVTYXhocmVsWHlsNXBrMVpzTG8zN2o5T05RTVpJTmo0MmFJLzBYQWdNQkFBR2paakJrCk1BNEdBMVVkRHdFQi93UUVBd0lCQmpBU0JnTlZIUk1CQWY4RUNEQUdBUUgvQWdFQ01CMEdBMVVkRGdRV0JCUW4KZ3N6OUhTMWp2NkVtcTlFSHB6VHZLekgvTkRBZkJnTlZIU01FR0RBV2dCUW5nc3o5SFMxanY2RW1xOUVIcHpUdgpLekgvTkRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQVVvK1BuQVpYdVZWaElhRmphTENZSnBzUis4MDY2WHlqCkpsQ2lFSnc4YVRiQjI3ZVVXZTUrYU4yL2NrZFpWc3R5WHVnZ2RVRkdkeTJiOXhsbitwdjgwZSsxbkpHRDRGZTkKQUZQNUt6L09BbWMyZlQ5Y0Z4TmNXRjRPYUZRWmZ5ampUb0JLWjA3VXpMNXJsbVRJZUtsNCtnUnhYbXJYWmY3bgpMZGV4bjVwL2pKU29tTXV5OXU0QjVkSkZGOVdKSW4vcmZiYmtwN0pJclRMam9seFNoS1p4cFBXUk5ZWCsvRk1hCjZBTitwZkJsTTFLbUpkUEd2d3NhYzBHUExndUxJaXBpNTVoMXhZRDhPN25nZzNzSFBaVnk2b1FDS3BsZjB3M2oKT0crYVh4QU5PVDhweG5SMDBJWldZYThKdW85NC9peWFKTGs2d2JMeFZIb25WWU93UVNZNlVBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
//			//caBas64 := "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUN5RENDQWJDZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJd01EZ3dNekV3TVRZd09Wb1hEVE13TURnd01URXdNVFl3T1Zvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTWVVClM3cDI2YmhNQUlxRncydDc4VjAzWkoyNnRDSTUwU2tJZjlsV1VGbEtIUXRYYmJndUJSNFRlbjM3aXJUeUJIcm8KbStXSHFxNjIzMXpEZHNJQjVUb1MySVpNWm9nZEx6VkMxYzRLWE9oNXo3YlZmZnZXUnQ2czQ2bExRbzhDWVloRAppYlRMTTZBazlJejZJRHBJUHlYNjJ6REtkaEw5anFoWmpac3NRL3RTQVE0eDJyV2hSSjBvZEQ2ZzczQk1SV3lzCkJCbDVxRDEzeWF3MkJqMkkrbWEzQWxDRFFCL3NwMXZ3dUJCTEdNK01CdjZ4cG1EZndRTmVEb2srWU82Y3Z0cnYKdmdObndJUDAxRVQ3L2VmdldaTjE1TE1zMVZGU0w1WHdmUGZ0dDB2bnFtTWhEQjFYSGFaWUVjMkpFZTgra3NyTgpiSm9Fc3NYYkRCVEo1MXVzL0tVQ0F3RUFBYU1qTUNFd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFEWVBLcXFaWnBFcktkNmxTaHhVN1l1V014QS8KcXRpbjFNQldMWmdSWDcyWDN3UnRqbUYxQkhJZithRklRK296blpxQUNTNWRSV2JZdjhZSnd5bVBTUlZGcUxJWApMUDB4Y0diaDF4dW04ZmpxN3RhZGRRVzVxUk9IWUYyQmFHTUh5a0RNV3hsOTNvcmZMdmN3bGJjaGpWOGdBSVl0ClgyUXBxMVpYY0o5VlU0ZTVydHp6cXNsaVgzTUNwOFZzZnBSaGw3MnVIWkd3SXN1eTBRNk5kODZxZHcwclFGQ0cKa3F4WGcydGljczBmeURJY3FmQnNFaURhejgvelFWSnFrOTlFWW5mSmdqZmlYdGNyN1lPQlNvUkV6KzZkekV5TwpvZ1FSVXk4RWQ1YTFuQ3VDblVzSHBCM2dodGI2ODdwaFJYREVKMmozeEJuZmx3Z2IveEt0S2NBK2xZYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
//			caBas64 := "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQ2ekNDQXRPZ0F3SUJBZ0lETVU0bE1BMEdDU3FHU0liM0RRRUJDd1VBTUdveEtqQW9CZ05WQkFvVElXTmkKT1dJMU5qSTRNelV5TmpjMFlqSmhPR0ZpWldJelpXRXdOV0V6TVRjME1ERVFNQTRHQTFVRUN4TUhaR1ZtWVhWcwpkREVxTUNnR0ExVUVBeE1oWTJJNVlqVTJNamd6TlRJMk56UmlNbUU0WVdKbFlqTmxZVEExWVRNeE56UXdNQjRYCkRUSXhNRFV4TWpBek1qRXdNRm9YRFRReE1EVXdOekF6TWpZeE1Wb3dhakVxTUNnR0ExVUVDaE1oWTJJNVlqVTIKTWpnek5USTJOelJpTW1FNFlXSmxZak5sWVRBMVlUTXhOelF3TVJBd0RnWURWUVFMRXdka1pXWmhkV3gwTVNvdwpLQVlEVlFRREV5RmpZamxpTlRZeU9ETTFNalkzTkdJeVlUaGhZbVZpTTJWaE1EVmhNekUzTkRBd2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDNTVFVU9vengxSDZDVlR6b1Z5YittditWamI4UEsKY2lVY1d5Ry8rZnhjR2p5VzRQeUpPQTE1S1pLUGtoUklWV2N0amlQVE50ZDNyTUwvRU8xMkFPTksva3NNeW15SgpuWFp6YUw5VmtQcHFyeDVWdG1FM3VUd0RFZ0lSbkM2amVMVWZGRkpoSFY2a0pTREtMdXIwUG1CTTJER0dWZHRECktqSjk2amIydFJrbFpWRVlZMElqaHZYSFF6d3dDM2E1OEh6ajYwQ015NmFzYzBKbUdLZVdxUERMdEgrUVlYSG4KYjQ1cGhvWHVNOFJMbnpBTGx3RWNzS0VsV1hCOVlremtPQVlZMzJtUWxnbEJLdnNlemNxY2V5VVBJZnVwWG1sMwpZNEd1d3Y4bUxpcEFKSWxqZ0VxSFlCcUV6NjhZdFYrekh3UHQwRDZMOVRudGZXMVFYancwRUJhOUFnTUJBQUdqCmdaa3dnWll3RGdZRFZSMFBBUUgvQkFRREFnS3NNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdQQVlJS3dZQkJRVUgKQVFFRU1EQXVNQ3dHQ0NzR0FRVUZCekFCaGlCb2RIUndPaTh2WTJWeWRITXVZV056TG1Gc2FYbDFiaTVqYjIwdgpiMk56Y0RBMUJnTlZIUjhFTGpBc01DcWdLS0FtaGlSb2RIUndPaTh2WTJWeWRITXVZV056TG1Gc2FYbDFiaTVqCmIyMHZjbTl2ZEM1amNtd3dEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSjcvVXA1ZDlORXhwNCtKWlErQlZlYjcKY2VGTHptMEc3TCs1anNKZ3dka0UweWNvTSsyUFowSnI2cmRJZWticE9weVZNSllTNVhBZHNsSHhNK21MRTFybwpYbE42cWpGNVVsbE9oVjllanRZSVh6T0JsZ1FXd2VDeTU2djRsSlhoVmpKM1REMlFHVVl3alZaaVJ2ZzBuUC9SCmM3anlFT2RmOHdxZFBOa20xaTdBMXNLZksvVFJVZ3BSWDRJTW9xbURxZjZqd0k4clJxOGpQb1BsMXNTOFdEbjAKVGV6QVQ0R0JuMGZTMWRoeEhnd3RwNmJERkcveFozVFY4SDcydkZ2U0toU1FKRzNrN1JRSFFHQWhwZ01aU3dOeQpITVNSeUVmVTRlUTRmMlYrQ3hCL1YvTWQzczVTS0xyZ2E2UElVMmV4cVl6U1VqOHJreHJmbktrbGU5djdzZHc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
//			//certBas64 := "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUekNDQWplZ0F3SUJBZ0lVTnQ5ZlVKRnBiRk85OW9mTlI3K1Y1Z25MeHJjd0RRWUpLb1pJaHZjTkFRRUwKQlFBd0dERVdNQlFHQTFVRUF4TU5hM1ZpWlhKdVpYUmxjeTFqWVRBZUZ3MHlNVEEwTWpNd01EVTJNREJhRncwMApPREE1TURnd01EVTJNREJhTURReEZ6QVZCZ05WQkFvVERuTjVjM1JsYlRwdFlYTjBaWEp6TVJrd0Z3WURWUVFECkV4QnJkV0psY201bGRHVnpMV0ZrYldsdU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQTI2V01wRk5iZzZCUmJFbDlYd1dzZVd1V28rbEFaVTFad1BrZUw3bE1ZUzFrd0dLQmUxKys0Z21mV0E4dAoyd0UxcFp0cDB2SGhhWlFWWG5wTDhJK2NUQVZIR2kxOUpKaDRwSHo4dWFUSHBpUjcyNlRXdTc4N1FOM3pMY2JnCmwzSXRDU3Z2TmJZUjc4cXJuMjRIdUd3TjhKOE5NY0tSR0Z3dWo3WXpGMXFaSkMrRTJIS2c0NUMzZVJEZHVPamQKamhEakhvbE5PYU5HRXh1SU5JSVlIK0JqSE1YVFlOZHMxdWdhL0hOVW1NQ053R3JiZFA3RjY2ZWh1aDZJdXN3TAp6L01IaU9NK0IrS29hY2ZCWW9nbUdhVTk0VC9qaHZXRHR2ZGh6Ujg0NHU1YVV1b1dNYWFSSW1zWXcrWHdhRW5kCjV3Ukk3WEJHK0hUaHJDZzBWMEFKQnBkZC9RSURBUUFCbzNVd2N6QU9CZ05WSFE4QkFmOEVCQU1DQmFBd0V3WUQKVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0l3REFZRFZSMFRBUUgvQkFJd0FEQWRCZ05WSFE0RUZnUVVXWkFYOHgxNApFNzJMNGdudWJmSjlVeGFPbnBzd0h3WURWUjBqQkJnd0ZvQVVKNExNL1IwdFk3K2hKcXZSQjZjMDd5c3gvelF3CkRRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFEMHg5enZCTGJIcjJjZEtmZE9JakxRcThDWmNveUp1aDBpL2pob2wKUCtKOHdWOVNBdUU4VDBNdXN3SjRWdTErWjNtNVFjLzVjbnpueVV3SCtFbWw4ZnQ0SnZoTTV5a3NWalhMQ1ZHMwpwRlpvUVRrQllDS0VyeldHUk5VNGVGakwwL0FlS214WHRJU2pUNnJsdm9SS0s1bXo5WHREb1cyN0JEb3Z1UTJSCjMrRlBkK1d1V3hiUzRZSXJuNFlRc2s3dGl1NnlROWdKTHAyN3Q1K2pHc1NtUlNzNHNyaWFRM1NJOUVGc202cEcKQ3ZkUmVUdnplMVp4RzlRMTJSUy9VVkFoenhZLzZOT1RTd25xdkthV2JYcUk3R29nVFc5S2pLdDMwajVXTHppZgoyNXZXd1FHbHAwRC85R01IeVAvUGhxRzMvbVl4dThJNVhMY2lJcnpaNTZjQkh4Yz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
//			//keyBas64 := "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBMjZXTXBGTmJnNkJSYkVsOVh3V3NlV3VXbytsQVpVMVp3UGtlTDdsTVlTMWt3R0tCCmUxKys0Z21mV0E4dDJ3RTFwWnRwMHZIaGFaUVZYbnBMOEkrY1RBVkhHaTE5SkpoNHBIejh1YVRIcGlSNzI2VFcKdTc4N1FOM3pMY2JnbDNJdENTdnZOYllSNzhxcm4yNEh1R3dOOEo4Tk1jS1JHRnd1ajdZekYxcVpKQytFMkhLZwo0NUMzZVJEZHVPamRqaERqSG9sTk9hTkdFeHVJTklJWUgrQmpITVhUWU5kczF1Z2EvSE5VbU1DTndHcmJkUDdGCjY2ZWh1aDZJdXN3THovTUhpT00rQitLb2FjZkJZb2dtR2FVOTRUL2podldEdHZkaHpSODQ0dTVhVXVvV01hYVIKSW1zWXcrWHdhRW5kNXdSSTdYQkcrSFRockNnMFYwQUpCcGRkL1FJREFRQUJBb0lCQUJYTzR4N3hzOVZtMW83RQo0VERORkduZDE5QWdlYWRWUGNNZU9QUU9GdHBUTW55eml4MmZ6UWtPWVliUnd3REtwdlB4Y1ZsamNMa1YzZVZLCmlUMnlWSmRyc3JxVHA2ZzVoMGoxcS9ZV3VVZnl1V1YrZ1YrVXhpSlRwekIxWFpsTDJkTGVUTnJ0WCt5S0YrNDEKYzRqSkdiMDVYWXNDUVh2RXMwN0xqVmtWUXIxSDExNDhOMWVJYXJyWjVGbkg4dVBHdDZLNWhJOXlsVHlYekZWMgpDZDc4WUw4U3NYTENCS2JYdzNpOGVSZForSEZWUnprSHVCa1JvcC9LTHNEOUxnUDdSZC9XOE8xZGxtQjVPcCtBCnlZbm5DYXVtQzFLL3ZtTXFTWEMreWc1UXoycFFTYzlwUjNRWGhma3dyWmhhNXRDVTltWlJQbDQ5anNldVpsWTgKekdlSGE5VUNnWUVBL09SSFk3T0ZuUG93Q3ZRcVlLZU8yVVgzOUpEeTFIR3pvSytnelczSWFnVHc5NlZmaFlzSgprT0x6QStvYkRJNW1tL1pYZnJMektaSWhpZG9ac3RtSU4vdTNuRGZuYWx0MThtcVprVHhnb2d2SGdiSDh0R2c5CnkyOGw3NzNudGVOR3hUekMyY0RMbUE4cEU0a0FJaTk0eDhlNXNDUFY5MGF4MnRZK3hFT3FzcU1DZ1lFQTNsaXEKVk1OMzM5MTR5MktTeXFiSitxNkxVTlRKUi8vZGdGQnNGQUpOZlMvR0M0NENmWGlmMnRsK1d0YmtKVWVxY25oYwpaNlhaMFRYWUpsN2VyNkNQcEFqVWs2MHV3R1QzZVpFblk5c3BBZHhUdDE2KzdwYVRvenNSY3g1aDR6aXdRVVZYClJSUFlKeXlnbFlzZGk1VVhBMGZNTTFDaFpMTzArMVUyTXJEQlZ0OENnWUEvVzJXelNjK29zMW1EOVFZRTd4V3YKdzRMS2grSCtiWG9HUU5uMWZaS2ZWUnVWdjUyOTFFYVNRUG1IT29pS1RjYlJQaGRQaTcrMTQ0RjVpdVd6VkNKMwpmQjNWQ29CMHVmTkR4NGN2eHNPaTlYYUhQTE5GODNPLzJ0blRSVzJldVJFSzZ4MFo5dDVLKzBsY05vK05BUDJ1CmQ1QkMyOGVJU3ZMV0U2VG9BTmZzSndLQmdDUW41T0xOdWxPRDd4MmJsT1V4UkF6b2p5MEF2UTVoTkFLbWtUeWIKdDBBUkliSkZVSEJZeWgzTFdqbXBVZ1loNWp5aEI5MnU0WUdjc041a2RPKzRPME5nVURrSFkxL1R5MDVRWlVoZQpuZ2Q0YllDVy9wTkxsd3huRVlwWHVYRTZpYWJEZ05KeHpLZHFJVjdQOVdqNlFIaS9GeHlORXdHT0czTDNRMDN3CjRpK2ZBb0dBQXBRS3V2TzBnMGFwcDZWOFJkd2JBaWFtVlZFcFlHM2U3NWpxRzBncUVLU01PUFJBWUZuWG5FWUEKNVNPaUVWdFBHLzdySFlaWEZWemhVZDdtZlNiTkh2WWRiQnVjQ1dGQytsdjA5R3Z5dzhFd25jT1hCVzJwYUcxagpKa1FpbE9ORnZUR2Q0WkNYVWZlMDQzS3lMOG83bWRsZ291cU1heG1IYnhDUUlLVUlLT1E9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
//			caByes, err := base64.StdEncoding.DecodeString(caBas64)
//			if err != nil {
//				logrus.Error(err)
//			}
//			//certByes, err := base64.StdEncoding.DecodeString(certBas64)
//			//if err != nil {
//			//	logrus.Error(err)
//			//}
//			//keyByes, err := base64.StdEncoding.DecodeString(keyBas64)
//			//if err != nil {
//			//	logrus.Error(err)
//			//}
//			pool.AppendCertsFromPEM(caByes)
//			//_, err = tls.X509KeyPair(certByes, keyByes)
//			//if err != nil {
//			//	logrus.Fatalf("LoadX509KeyPair: %v", err)
//			//}
//			dialer.TLSClientConfig = &tls.Config{
//				InsecureSkipVerify: true,
//				NextProtos:         []string{"http/1.1"},
//				RootCAs:            pool,
//				//Certificates: []tls.Certificate{pair},
//			}
//			//if req.Header.Get("X-Portal-Host") != "" {
//			//	req.Header.Add("Host", req.Header.Get("X-Portal-Host"))
//			//}
//			//logrus.Info("[viper]", execURL.String())
//
//			//req.Header.Add("X-Portal-Websocket", "on")
//			conn, _, err := dialer.Dial(execURL.String(), req.Header)
//			if err != nil {
//				logrus.Errorf("[viper] failed to connect to %s: %v", execURL.String(), err)
//				return nil, err
//			}
//			return conn, nil
//		} else {
//			execURL = url.URL{
//				Scheme:   "ws",
//				Host:     req.URL.Host,
//				Path:     path,
//				RawQuery: query,
//			}
//			if req.Header.Get("X-Portal-Host") != "" {
//				req.Header.Add("Host", req.Header.Get("X-Portal-Host"))
//			}
//			logrus.Info("[viper]", execURL.String())
//
//			req.Header.Add("X-Portal-Websocket", "on")
//			conn, _, err := websocket.DefaultDialer.Dial(execURL.String(), req.Header)
//			if err != nil {
//				logrus.Errorf("[viper] failed to connect to %s: %v", execURL.String(), err)
//				return nil, err
//			}
//			return conn, nil
//		}
//	}
//	var conn *websocket.Conn
//	var waitConn sync.WaitGroup
//	waitConn.Add(1)
//	var setsizeOnce sync.Once
//	var wait sync.WaitGroup
//	wait.Add(2)
//	go func() {
//		defer func() {
//			wait.Done()
//			if conn != nil {
//				conn.Close()
//			}
//			upperConn.Close()
//		}()
//		waitConn.Wait()
//		for {
//			if conn == nil {
//				return
//			}
//			tp, m, err := conn.ReadMessage()
//			if err != nil {
//				return
//			}
//			m[0] = Output
//			if conf.TerminalSecurity() {
//				m = hidePassEnv(m)
//			}
//			if err := upperConn.WriteMessage(tp, m); err != nil {
//				return
//			}
//		}
//	}()
//	go func() {
//		defer func() {
//			wait.Done()
//			if conn != nil {
//				conn.Close()
//			}
//			upperConn.Close()
//		}()
//		for {
//			tp, m, err := upperConn.ReadMessage()
//			if err != nil {
//				return
//			}
//			switch m[0] {
//			case Input:
//				if conn == nil {
//					continue
//				}
//				m[0] = 0 // k8s 协议, stdin = 0
//				if err := conn.WriteMessage(tp, m); err != nil {
//					return
//				}
//			case SetSize:
//				var err error
//				setsizeOnce.Do(func() {
//					var v Winsize
//					err = json.Unmarshal(m[1:], &v)
//					if err != nil {
//						return
//					}
//					conn, err = f(v.Cols, v.Rows)
//					waitConn.Done()
//					if err != nil {
//						logrus.Errorf("[viper] failed to connect k8s exec ws: %v", err)
//						return
//					}
//				})
//				if err != nil {
//					return
//				}
//			default:
//				continue
//			}
//		}
//	}()
//	wait.Wait()
//}
//
